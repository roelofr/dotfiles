#!/usr/bin/env bash

function _check-git-scope() {
    read -p "Continue (y/n)?" choice
    case "$choice" in
    y|Y) return 0;;
    *) return 1
    esac
}

# Find git root
dir="$( git rev-parse --show-toplevel 2>/dev/null)"
test -z "$dir" && exit 128

# Move to root
cd "$dir"

# Get current scope
scope="$1"

# Get current author e-mail
currentauth="$( git config --local user.email 2>/dev/null )"

# Auto-configure if $scope is empty
if [ -z "$scope" -a -z "$currentauth" ]; then
    echo "Auto configure: using work setting"
    scope=work
    _check-git-scope || exit 128
elif [ -z "$scope" -a "$currentauth" = "roelof@038dev.nl" ]; then
    echo "Auto configure: using personal setting"
    scope=personal
    _check-git-scope || exit 128
fi

# Configure local scope from
case $scope in
    w|work|038dev|038)
        echo "Configuring git repository at [${dir}] for 038dev use"
        git config --local user.email "roelof@038dev.nl"
        git config --local user.name "Roelof Roos"
        git config --local user.signingkey ""
    ;;
    p|personal|roelof)
        echo "Configuring git repository at [${dir}] for personal use"
        git config --local --unset user.email
        git config --local --unset user.name
        git config --local --unset user.signingkey
    ;;
    *) echo default
        echo "Not matching any config, use [work] or [personal]."
        exit 128
    ;;
esac
