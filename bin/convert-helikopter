#!/usr/bin/env bash

###
#
# Creates a GIF of the image specified with 256x256 dimensions, that rotates in 4 directions.
# Called 'convert-helikopter' for comedic effect.
#
###

# File
source="$( realpath "$1" )"
dest="${source}.gif"

test -f "$source" || (echo "File not found!" && exit 1)

DEST_N="$( tempfile -s.jpg )"
DEST_E="$( tempfile -s.jpg )"
DEST_S="$( tempfile -s.jpg )"
DEST_W="$( tempfile -s.jpg )"

echo "Scaling image into"
convert "$source" -resize '256x256^' -background black -compose Copy -gravity center -extent '256x256' -quality 90 "$DEST_N"

echo "Rotating image on 90 degrees"
convert "$DEST_N" -background black -compose Copy -gravity center -rotate 90 "$DEST_E"
convert "$DEST_N" -background black -compose Copy -gravity center -rotate 180 "$DEST_S"
convert "$DEST_N" -background black -compose Copy -gravity center -rotate 270 "$DEST_W"

# If $2 is '-h', add a small chopper
CONVERT_ARGS=
if [ "$2" = "-h" ]; then
    echo "Adding tiny cute chopper"
    script_dir="$( cd "$( dirname "$( realpath ${BASH_SOURCE[0]} )" )" && pwd )"
    watermark="$( realpath "${script_dir}/../img/helikopter.png" )"
    if [ -f "$watermark" ]; then
        convert "$DEST_N" -coalesce -gravity SouthEast -geometry +5+5 null: "${watermark}" -layers composite -layers optimize "$DEST_N"
        convert "$DEST_E" -coalesce -gravity SouthEast -geometry +5+5 null: "${watermark}" -layers composite -layers optimize "$DEST_E"
        convert "$DEST_S" -coalesce -gravity SouthEast -geometry +5+5 null: "${watermark}" -layers composite -layers optimize "$DEST_S"
        convert "$DEST_W" -coalesce -gravity SouthEast -geometry +5+5 null: "${watermark}" -layers composite -layers optimize "$DEST_W"
    else
        echo "Missing chopper :("
    fi
fi

echo "Creating gif"
convert -quality 50 \
    "$DEST_N" \
    "$DEST_E" \
    "$DEST_S" \
    "$DEST_W" \
    "$dest"

echo "Deleting temps"
rm \
    "$DEST_N" \
    "$DEST_E" \
    "$DEST_S" \
    "$DEST_W" \

echo "Created file [${dest}]"
echo "Link: file://${dest}"
